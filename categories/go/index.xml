<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on </title>
    <link>https://blog.laelaps.us/categories/go/</link>
    <description>Recent content in Go on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Jul 2023 15:24:34 +0800</lastBuildDate><atom:link href="https://blog.laelaps.us/categories/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Go Programming Language 程序结构（2）</title>
      <link>https://blog.laelaps.us/posts/go/thegoprogramminglanguage/chapter2/</link>
      <pubDate>Wed, 12 Jul 2023 15:24:34 +0800</pubDate>
      
      <guid>https://blog.laelaps.us/posts/go/thegoprogramminglanguage/chapter2/</guid>
      <description>名称 在Go中使用驼峰式来命名名称（大驼峰或小驼峰都可以），名称区分大小写，并且名称的开头应该是一个字母或者下划线，后面可以是任意的字符、数字、下划线。 实体 第一个字母大写表示对包外是可见的和可访问的。 声明 在Go中只有四个主要的声明：变量（var），常量（const），类型（type），函数（func）。
Go文件格式 一个Go文件应该有一个package在文件开头表明文件属于那个包。 接着是一个import声明，表示导入的包。 接下来是包的级别的类型，变量，常量，函数的声明。 package main import &amp;#34;fmt&amp;#34; //(包级别的声明) 不仅只对这个文件可见，而是对同一个包中的所有源文件都可以见 const bollingF = 212.0 func main(){ var f = bollingF var c = (f - 32) * 5 / 9 fmt.Printf(&amp;#34;boiling point = %g or %g°C\n&amp;#34;, f, c) } 变量 var name type = expression 我们可以将type或者expression省略一个，如果省略type，则可以从expression中推断出，如果省略expression，则Go会对他自己进行初始化，数字为0，布尔类型为false，字符串为“”，接口和其他的引用类型为nil。
var a, b, c int var x, y, z = 1, 2, 3 短变量声明 我们要知道短变量是用来声明和初始化局部变量。
name := expression 如果短变量声明的左边变量在之前被定义，那么他的行为就跟复制一样，但是每一个短变量声明中都必须声明一个新变量</description>
    </item>
    
  </channel>
</rss>
